                                            PRIMEIRO PASSO 
 precisamos usar aquela url pra bater na api do ifood e pegar os dados de CNPJ e NUMERO DE TELEFONE


                                             COMO FAZER?
 Ias disse que a gente nao precisa fazer algo grande, a API do ifood ela é aberta , ate uma api paga pode fazer isso;
 *posso ter a opçao de usar uma API pronta e dps so criar um CRUD simples que gerencia as requests


                                          O QUE PRECISO DESCOBRIR?
 como usar a url ( ) pra bater na api do IFOOD e pegar os dados de cnpj e numero de telefone? 

 * penso que com uma API pronta, (paga ou não) jogaria a url la e ela traria os dados pra mim, uma vez ela fazendo isso
 so precisaria criar uma interface simples de vizualizaçao dos dados 

 RESULTADO: "Encontrei a URL!, agora vamos fazer nosso sistema consumir essa URL e nos retornar os dados no nosso sistema"
                                            

                                            
                                               SEGUNDO PASSO 
Preciso agora fazer um featch em cima dessa URL que eu encontrei, pra pegar os dados necessarios, meu back end faz uma req pega o cnpjj e manda p front !

desafios: consegui o link, ok! mas ao estruturar a logica do featch, o codigo me retorna um erro


* temos 2 passos, URL e a logica do fetch... onde esta o problema, vamos encontrar testando primeiro a URl, ela estando retornando os dados
entao é a estruturaçao do fetch que esta incoreta!  

                                                SITUAÇÃO PROBLEMA 
esta quase tudo certo, meu front end consegue por meio do input capturar o cnpj e enviar pra ca, mas o problema agora é que quando
a gente aqui, pega o marchaint id q o front enviou e faz a requisição no endpoint da API do Ifood solicitando os dados, occore um error
chamado: Erro na requisição: SyntaxError: Unexpected token '<', "<!doctype "... is not valid JSON 

em primeiro lugar ache o problema; E em segundo.... resolva o problema

ONDE ELE TA? { 
    O problema esta no meu fetch ou seja na minha requisição feita aqui! estudando a documentação do fetch
    ela confirma pra gente, caro leitor aquilo que a gente pensou, a requisição realmente esta sendo impedida de alguma maneira por que:
    
    "A Promise retornada do fetch() não rejeitará o status do erro HTTP, mesmo que a resposta seja um HTTP 404 ou 500. 
    Em vez disso, ela irá resolver normalmente.
    Com o status ok definido como falso, e só irá rejeitar se houver FALHA na rede ou se ALGO IMPEDIR a requisição de ser completada."  
    
   COMO RESOLVER? : Encontrar quem é esse ALGO que IMPEDE a req de ser feita até agora encontrei algumas supostas causas (me sinto um detetive rs)
 }



Possiveis causas de acordo com minhas pesquisas: 

1- erro ao especificar parametros ds headers no corpo da requisição que estruturei, mas na real serio,eu ja fiz de tudo pra
corrigir caso o erro seja esse, e ainda ele persiste!

2- Erro a forma como passei o merchaint id, talvez a sintax de como passamos o a forma como queremos capturar o valor do atributo 
merchaintId pode estar incorreta. 

3- esse eu acho pouco provavel, mas talvez o cors do navegador ta impedindo minha req de ser feita.

prolema resolvido, com a estruturação do fetch funcionando e o projeto rodando em produção podemos lançar a proxima 
parte do projeto!


                                                  ORM:
  A ideia é todas as consultas feitas e serem armazenadas em um SGBD 
  como primeira etapa desse processo necessitamos criar a basee: uma camada de abstração entre o nosso SGB e a nosssa
  aplicação back-end

  O ORM da vez é o prisma
  Pergunta a ser respondida até o fim desta etapa: Por que o prisma e não o Sequelize?:                                                   
  




                                    API DE NUVEM (GrahpAPI by Meta):

Para a continuidade e automatização desse projeto, irei usar a API de Nuvem da Meta para ser a fonte de 
alimentação para o meu boot. a implementação da tecnologia é a parte final do processo. Vamos estruturar por etapas 
o plano para integrar um boot que tenha como base de alimentação a API de nuvem da Meta.

Passo 1: Entender a API (o que ela retorna, qual o seu 'por baixo dos panos')
Passo 2: Arrumar o web token da API da Meta
Passo 3: Criar o meu boot SDR pela plataforma dataStaxs lang flow
passo 4: integrar o boot criado a esse sistema back-end

                                                
                                                
                                                 PASSO 1

O que é a API de nuvem? é uma API que faz exatamente o que eu quero! interagir com clientes e mandar mensagens
para os Leads pela plataforma do watsApp.

Toda a API tem seus serviços, serviços podem ser endpoints específicos que retornam algo.
A Meta é a mãe ou o "planeta" onde moram WatsApp, FaceBook, Insta e etc...

Para a comunicação desses serviços a meta Usa GraphAPI que é a API que queremos consumir. no entanto 
essa API tem varios serviços. um desses serviços é o que a gente quer! A API DE NUVEM! 

A API de Nuvem é um serviço dentro da Graph API, oferecido pela Meta, que permite que você 
(ou seu sistema) interaja com o WhatsApp de forma automática.
mandando mensagens, recebendo, configurando webhooks, tudo isso sem precisar hospedar nada
por conta própria — só pegar o token, o número aprovado, e mandar bala.

                                         GrahpAPI
Já que descobrimos que a API de Nuvem é um serviço da GrahpAPI, temos quee entender bem como ela funciona
GrahpAPI é a API usada pela meta para que todos os apps possam ultilizar de seus serviços. Para criar videos, curtir fotos
enviar mensagens e etc.


